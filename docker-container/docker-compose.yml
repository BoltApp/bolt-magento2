version: '2'
services:
  db:
    image: 'mariadb:10.0'
    ports:
      - 3306
    volumes:
      - /var/lib/mysql
      - './docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d'
    environment:
      - MYSQL_ROOT_PASSWORD=magento2
      - MYSQL_DATABASE=magento2
      - MYSQL_USER=magento2
      - MYSQL_PASSWORD=magento2
  redis:
    image: 'redis:3.0'
    volumes:
      - /data
    ports:
      - 6379
  elasticsearch:
    image: 'magento/magento-cloud-docker-elasticsearch:6.5'
  varnish:
    image: 'magento/magento-cloud-docker-varnish:latest'
    environment:
      - VIRTUAL_HOST=magento2.docker
      - VIRTUAL_PORT=80
      - HTTPS_METHOD=noredirect
    ports:
      - '80:80'
    depends_on:
      - web
  fpm:
    image: 'magento/magento-cloud-docker-php:7.2-fpm'
    ports:
      - 9000
    depends_on:
      - db
    volumes_from:
      - appdata
    volumes:
      - '.:/var/www/magento:ro'
    env_file:
      - ./docker/global.env
      - ./docker/config.env
  build:
    image: 'magento/magento-cloud-docker-php:7.2-cli'
    hostname: build.magento2.docker
    depends_on:
      - db
      - redis
      - elasticsearch
    volumes:
      - '~/.composer/cache:/root/.composer/cache'
      - '.:/var/www/magento:rw'
    volumes_from:
      - appdata
    env_file:
      - ./docker/global.env
      - ./docker/config.env
  deploy:
    image: 'magento/magento-cloud-docker-php:7.2-cli'
    hostname: deploy.magento2.docker
    depends_on:
      - db
      - redis
      - elasticsearch
    volumes:
      - '~/.composer/cache:/root/.composer/cache'
      - '.:/var/www/magento:ro'
    volumes_from:
      - appdata
    env_file:
      - ./docker/global.env
      - ./docker/config.env
  web:
    image: 'magento/magento-cloud-docker-nginx:latest'
    ports:
      - '443:443'
    depends_on:
      - fpm
      - db
    volumes_from:
      - appdata
    volumes:
      - '.:/var/www/magento:ro'
    env_file:
      - ./docker/global.env
      - ./docker/config.env
  cron:
    image: 'magento/magento-cloud-docker-php:7.2-cli'
    hostname: cron.magento2.docker
    depends_on:
      - db
      - redis
      - elasticsearch
    volumes:
      - '~/.composer/cache:/root/.composer/cache'
      - '.:/var/www/magento'
    volumes_from:
      - appdata
    env_file:
      - ./docker/global.env
      - ./docker/config.env
    command: run-cron
  appdata:
    image: tianon/true
    volumes:
      - './docker/mnt:/mnt'
      - /var/www/magento/vendor
      - /var/www/magento/generated
      - /var/www/magento/pub
      - /var/www/magento/var
      - /var/www/magento/app/etc
