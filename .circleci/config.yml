version: 2.1

orbs:
  slack: circleci/slack@3.4.2
  swissknife: roopakv/swissknife@0.48.0

parameters:
  run_default_workflow:
    type: boolean
    default: true
  run_rebase_and_unit_test:
    type: boolean
    default: false
  rebase_and_unit_test_branch_name:
    type: string
    default: ""

commands:
  notify-rc-tag:
    description: 'Notify #eng-magento2 after a release candidate is tagged.'
    parameters:
      tag:
        type: string
        default: ''
    steps:
      - slack/notify:
          color: '#58a359'
          mentions: 'pavel,oleksii,'
          message: ":white_check_mark: A new RC << parameters.tag >> has been tagged for Magento 2!"
          webhook: $SLACK_MAGENTO2_WEBHOOK
          include_job_number_field: false
          include_project_field: false
          include_visit_job_action: false
  m2-php-test:
    description: PHP Unit tests for M2
    parameters:
      cache_key_separator:
        type: string
      m2_version:
        type: enum
        default: "2.3.0"
        enum: ["2.2.0", "2.3.0"]
      php_version:
        type: enum
        default: "php72"
        enum: ["php70", "php71", "php72"]
      is_integration:
        type: boolean
        default: false
    steps:
      - checkout
      - restore_cache:
          keys:
            - << parameters.m2_version >>-v1-<< parameters.cache_key_separator >>-composer-lock-{{ arch }}-{{ checksum "composer.json" }}
            - << parameters.m2_version >>-v1-<< parameters.cache_key_separator >>-composer-lock-{{ arch }}
            - << parameters.m2_version >>-v1-<< parameters.cache_key_separator >>-composer-lock
      - when:
          condition: << parameters.is_integration >>
          steps:
            - run:
                name: << parameters.php_version >> Magento << parameters.m2_version >> Integration
                command: |
                  mkdir ./artifacts
                  export TEST_ENV=<< parameters.php_version >>
                  export MAGENTO_VERSION=<< parameters.m2_version >>
                  Test/scripts/ci-integration.sh
      - unless:
          condition: << parameters.is_integration >>
          steps:
            - run:
                name: << parameters.php_version >> << parameters.m2_version >> Unit
                command: |
                  mkdir ./artifacts
                  export COMPOSER_MEMORY_LIMIT=3G
                  export TEST_ENV=<< parameters.php_version >>
                  export MAGENTO_VERSION=<< parameters.m2_version >>
                  Test/scripts/ci-unit.sh
      - save_cache:
          key: << parameters.m2_version >>-v1-<< parameters.cache_key_separator >>-lock-{{ arch }}-{{ checksum "composer.json" }}
          paths:
            - /home/circleci/.composer/cache/
      - store_artifacts:
          path: ./artifacts
      - run:
          name: "Conditionally Notify Greenkeeper"
          when: on_fail
          command: |
            if [[ ${CIRCLE_BRANCH} == "master" ]]; then
              NOTIFY_FLAG=true
            else
              if [[ ${CIRCLE_BRANCH:0:3} == ci/ ]] && grep -n "^${CIRCLE_BRANCH:3}$" ./.circleci/scripts/auto-rebase-branches.txt >> /dev/null ; then
                NOTIFY_FLAG=true
              else
                NOTIFY_FLAG=false
              fi
            fi
            if [ "$NOTIFY_FLAG" == false ]; then
              circleci-agent step halt
            fi
      - slack/status:
          fail_only: true
          failure_message: ':red_circle: M2: A $CIRCLE_JOB job has failed!'
          webhook: $SLACK_GREENKEEPER_WEBHOOK

  m2-php-test-for-merchant-branches:
    description: PHP Unit tests for M2 on all merchant branches
    steps:
      - checkout
      - swissknife/trigger-pipeline:
          install-skip-trigger: true
      - run:
          name: Tests
          command: |
            mkdir ./artifacts
            .circleci/scripts/test-merchant-branches.sh "github" "BoltApp" "bolt-magento2"

jobs:
  auto-rebase:
    docker:
      - image: boltdev/m2-installed-plugin-ci-php72:2.3.0-v2
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
    steps:
      - checkout
      - run:
          name: Auto-rebase
          command: bash .circleci/scripts/auto-rebase.sh

  rebase-and-unit-test:
    docker:
      - image: boltdev/m2-installed-plugin-ci-php72:2.3.0-v2
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
    steps:
      - checkout
      - run:
          name: Rebase and Unit Test
          command: bash .circleci/scripts/rebase-and-unit-test.sh << pipeline.parameters.rebase_and_unit_test_branch_name >>

  tag-release-candidate:
    docker:
      - image: boltdev/m2-installed-plugin-ci-php72:2.3.0-v2
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
    steps:
      - checkout
      - run:
          name: Tag master as release candidate every 2 weeks
          command: .circleci/scripts/tag-rc-if-necessary.sh
      - notify-rc-tag:
          tag: $NEWTAGNAME

  integration-php72-magento23:
    docker:
      - image: boltdev/m2-installed-plugin-ci-php72:2.3.0-v2
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
    environment:
        MAGENTO_DIR: magento
    steps:
      - m2-php-test:
          cache_key_separator: php72mag23installed
          m2_version: "2.3.0"
          php_version: "php72"
          is_integration: true

  unit-php72-magento23:
    docker:
      - image: boltdev/m2-installed-plugin-ci-php72:2.3.0-v1
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
      - image: circleci/mysql:5.7
    steps:
      - m2-php-test:
          cache_key_separator: php72mag23installed
          m2_version: "2.3.0"
          php_version: "php72"
          is_integration: false

  unit-php71-magento22:
    docker:
      - image: boltdev/m2-installed-plugin-ci-php71:2.2.0-v1
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
      - image: circleci/mysql:5.7
    steps:
      - m2-php-test:
          cache_key_separator: php71mag22installed
          m2_version: "2.2.0"
          php_version: "php71"
          is_integration: false

  unit-php70-magento22:
    docker:
      - image: boltdev/m2-installed-plugin-ci-php70:2.2.0-v1
        auth:
            username: $DOCKERHUB_USER
            password: $DOCKERHUB_PASS
      - image: circleci/mysql:5.7
    steps:
      - m2-php-test:
          cache_key_separator: php70mag22installed
          m2_version: "2.2.0"
          php_version: "php70"
          is_integration: false

  unit-php72-magento23-for-merchant-branches:
    docker:
      - image: boltdev/m2-installed-plugin-ci-php72:2.3.0-v1
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
      - image: circleci/mysql:5.7
    steps:
      - m2-php-test-for-merchant-branches

  phpcs:
    docker:
      - image: circleci/php:7.2-cli
    steps:
      - checkout
      - run:
          name: phpcs MEQP2 standard test
          command: |
            Test/scripts/phpcs_meqp2.sh

workflows:
  version: 2
  build:
    when: << pipeline.parameters.run_default_workflow >>
    jobs:
#      - phpcs
      - unit-php72-magento23
      - unit-php71-magento22
      - unit-php70-magento22
      - integration-php72-magento23
  tagger:
    triggers:
      - schedule:
          cron: "0 5 * * 4" # Every Thursday at 5AM UTC
          filters:
            branches:
              only:
                - master
    jobs:
      - tag-release-candidate
  merchant-branch-test:
    when: << pipeline.parameters.run_default_workflow >>
    jobs:
      - unit-php72-magento23-for-merchant-branches
  auto-rebase:
    jobs:
      - auto-rebase:
          filters:
            branches:
              only:
                - master
  rebase-and-unit-test: #note: this workflow is triggered remotely on merchant branches when a PR is submitted
    when: << pipeline.parameters.run_rebase_and_unit_test >>
    jobs:
      - rebase-and-unit-test
